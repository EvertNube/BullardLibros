@using BullardLibros.Core.DTO
@model MovimientoDTO
@{
    ViewBag.Title = "NubeLabs SCI - Movimiento";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@section Styles{
    @Styles.Render("~/Content/themes/admin/js/select2/select2.css")
    @Styles.Render("~/Content/themes/admin/js/select2/theme.css")
}

@section Scripts{
    @Scripts.Render("~/Content/themes/admin/js/select2/select2.min.js")
    <script type="text/javascript">
        @{
            var jss = new System.Web.Script.Serialization.JavaScriptSerializer();
            var userInfoJson = jss.Serialize(ViewBag.Categorias);
            var formaMovsIngresos = jss.Serialize(ViewBag.lstFormaMovsIngresos);
            var formaMovsEgresos = jss.Serialize(ViewBag.lstFormaMovsEgresos);
        }
        var mydata = JSON.parse('@Html.Raw(userInfoJson)');
        var mydataFormaMovsIngresos = JSON.parse('@Html.Raw(formaMovsIngresos)');
        var mydataFormaMovsEgresos = JSON.parse('@Html.Raw(formaMovsEgresos)');
        $(document).ready(function () {
            $('.miselect2').select2();

            $('#IdCategoria').select2({
                placeholder: "Seleccione una categoría",
                data: mydata,
                allowClear: true
            })
            
            if ($('#IdTipoMovimiento').val == 1)
            {
                $('#IdFormaMovimiento').select2({
                    data: mydataFormaMovsIngresos
                })
            }
            else
            {
                $('#IdFormaMovimiento').select2({
                    data: mydataFormaMovsEgresos
                })
            }
            

            $('#IdTipoMovimiento').on('change', function () {
                if(this.value == 1)
                {
                    $('#IdFormaMovimiento').select2({
                        data: mydataFormaMovsIngresos
                    })
                    //$("#IdFormaMovimiento optgroup[label=Ingreso]").prop('disabled', false).show();
                    //$("#IdFormaMovimiento optgroup[label=Egreso]").prop('disabled', true).hide();
                    //$("#IdFormaMovimiento optgroup[label=Ingreso] option:first").attr('selected', 'selected');
                }
                else
                {
                    $('#IdFormaMovimiento').select2({
                        //placeholder: "Seleccione una forma",
                        data: mydataFormaMovsEgresos
                        //allowClear: true
                    })
                    //$("#IdFormaMovimiento optgroup[label=Egreso]").prop('disabled', false).show();
                    //$("#IdFormaMovimiento optgroup[label=Ingreso]").prop('disabled', true).hide();
                    //$("#IdFormaMovimiento optgroup[label=Egreso] option:first").attr('selected', 'selected');
                }
            });
        });

        function format(res) {
            var markup = null;
            if (res.children == null)
                markup = '<font color="#27ae60">' + res.text + '</font>';
            else
                markup = '<font color="black">' + res.text + '</font>';
            return markup;
        }

        function CheckNumericValue(e) {
            var key = e.which ? e.which : e.keyCode;
            //enter key  //backspace //tabkey      //escape key
            if ((key >= 48 && key <= 57) || key == 13 || key == 8 || key == 9 || key == 27 || key == 46) {
                return true;
            }
            else {
                alert("Solo ingresar caracteres numericos");
                return false;
            }
        }

        function ModificarCombos() {
            if ($('#Nombre').val() == 'INGRESOS' || $('#Nombre').val() == 'ingresos') {
                $('#IdTipoMovimiento').prop('selectedIndex', 1);
                $('#IdEstadoMovimiento').prop('selectedIndex', 1);
                //document.getElementById("IdTipoMovimiento").selectedIndex = 1;
            }
        }

    </script>
}
<section class="vbox">
    <section class="scrollable padder">
        <div class="row m-b">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                @if (Model == null || Model.IdMovimiento == 0)
                {
                    <h2>Nuevo Movimiento</h2>
                }
                else
                {
                    <h2>Actualizar Movimiento</h2>
                }

                @using (Html.BeginForm("AddMovimiento", "Admin", FormMethod.Post))
                {
                    @Html.ValidationSummary(true)
                    <div class="row m-b">
                        <div class="col-xs-12 col-md-12">
                            @Html.Partial("_showAlertMessages")

                            <section class="panel panel-default">
                                @*<header class="panel-heading font-bold">Formulario de Registro</header>*@
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="form-group col-md-4">
                                            <label>Fecha</label>
                                            @Html.TextBoxFor(u => u.Fecha, "{0:dd/MM/yyyy}", new { @id = "Fecha", @class = "datepicker-input form-control", @placeholder = "Ingrese la fecha del movimiento", @type = "text", @data_provide = "datepicker", @readonly = "true" })
                                            @Html.ValidationMessageFor(u => u.Fecha)
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>Tipo de Movimiento</label>
                                            @Html.DropDownListFor(u => u.IdTipoMovimiento, new SelectList(ViewBag.TiposMovimientos, "IdTipoMovimiento", "Nombre", Model != null ? (Model.IdTipoMovimiento != null ? Model.IdTipoMovimiento : 0) : 0), new { @class = "form-control parsley-validated" })
                                            @Html.ValidationMessageFor(u => u.IdTipoMovimiento)
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>Estado de Movimiento</label>
                                            @Html.DropDownListFor(u => u.IdEstadoMovimiento, new SelectList(ViewBag.EstadosMovimientos, "IdEstadoMovimiento", "Nombre", Model != null ? (Model.IdEstadoMovimiento != null ? Model.IdEstadoMovimiento : 0) : 0), new { @class = "form-control parsley-validated" })
                                            @Html.ValidationMessageFor(u => u.IdEstadoMovimiento)
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="form-group col-md-4">
                                            <label>Forma de Movimiento</label>
                                            @Html.TextBoxFor(u => u.IdFormaMovimiento, new { @class = "col-xs-12 col-sm-12 col-md-12 no-padder" })
                                            @*@Html.DropDownListFor(u => u.IdFormaMovimiento, new SelectList(ViewBag.lstTFormaMovimientos, "IdFormaMovimiento", "Nombre", "NombreTipo", Model != null ? (Model.IdFormaMovimiento != null ? Model.IdFormaMovimiento : 0) : 0), new { @class = "form-control parsley-validated" })*@
                                            @Html.ValidationMessageFor(u => u.IdFormaMovimiento)
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>Número de operación</label>
                                            @Html.TextBoxFor(u => u.NroOperacion, new { @class = "form-control", @placeholder = "Ingrese el nombre del movimiento", @type = "text", @onkeyup = "ModificarCombos()" })
                                            @Html.ValidationMessageFor(u => u.NroOperacion)
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>Monto</label>
                                            @Html.TextBoxFor(u => u.Monto, "{0:#.00}", new { @class = "form-control", @placeholder = "Ingrese el monto del movimiento", @type = "text", @onkeypress = "return CheckNumericValue(event)" })
                                            @Html.ValidationMessageFor(u => u.Monto)
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="form-group col-md-4">
                                            <label>Entidad Responsable</label>
                                            @Html.DropDownListFor(u => u.IdEntidadResponsable, new SelectList(ViewBag.EntidadesResponsables, "IdEntidadResponsable", "Nombre", Model != null ? (Model.IdEntidadResponsable != null ? Model.IdEntidadResponsable : 0) : 0), new { @class = "col-xs-12 col-sm-12 col-md-12 no-padder miselect2" })
                                            @Html.ValidationMessageFor(u => u.IdEntidadResponsable)
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>Tipo de Documento</label>
                                            @Html.DropDownListFor(u => u.IdTipoDocumento, new SelectList(ViewBag.lstTiposDeDocumento, "IdTipoDocumento", "Nombre", Model != null ? (Model.IdTipoDocumento != null ? Model.IdTipoDocumento : 0) : 0), new { @class = "form-control parsley-validated" })
                                            @Html.ValidationMessageFor(u => u.IdFormaMovimiento)
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>Numero de documento</label>
                                            @Html.TextBoxFor(u => u.NumeroDocumento, new { @class = "form-control", @placeholder = "Ingrese el numero del documento", @type = "text" })
                                            @Html.ValidationMessageFor(u => u.NumeroDocumento)
                                        </div>
                                    </div>
                                    
                                    @*<div class="form-group col-md-4">
                                        <label>Categoria : <font color="#3498db">@ViewBag.NombreCategoria</font></label>
                                        @Html.TextBoxFor(u => u.IdCategoria, new { @class = "col-xs-12 col-sm-12 col-md-12 no-padder" })
                                        @Html.ValidationMessageFor(u => u.IdCategoria)
                                    </div>*@

                                    <div class="form-group">
                                        <label>Comentario</label>
                                        @Html.TextBoxFor(u => u.Comentario, new { @class = "form-control", @placeholder = "Ingrese el comentario del movimiento", @type = "text" })
                                        @Html.ValidationMessageFor(u => u.Comentario)
                                    </div>
                                    @if (ViewBag.EsAdmin && Model != null && Model.IdMovimiento > 0)
                                    {
                                        <div class="line line-dashed line-lg pull-in"></div>
                                        <div class="checkbox">
                                            <label>
                                                @Html.CheckBoxFor(u => u.Estado)
                                                Activo
                                            </label>
                                            @Html.ValidationMessageFor(u => u.Estado)
                                        </div>}
                                    else
                                    {
                                        @Html.TextBoxFor(u => u.Estado, new { @value = Model != null ? Model.Estado : false, @type = "hidden" })
                                    }
                                    <div class="line line-dashed line-lg pull-in"></div>
                                    @Html.TextBoxFor(u => u.IdMovimiento, new { @value = Model != null ? Model.IdMovimiento.ToString() : "", @type = "hidden" })
                                    @Html.TextBoxFor(u => u.IdCuentaBancaria, new { @value = Model != null ? Model.IdCuentaBancaria.ToString() : "", @type = "hidden" })
                                                @*@Html.TextBoxFor(u => u.IdEntidadResponsable, new { @value = Model != null ? Model.IdEntidadResponsable.ToString() : "", @type = "hidden" })*@
                                                @*@Html.TextBoxFor(u => u.IdTipoMovimiento, new { @value = Model != null ? Model.IdTipoMovimiento.ToString() : "", @type = "hidden" })*@
                                                @*@Html.TextBoxFor(u => u.IdCategoria, new { @value = Model != null ? Model.IdCategoria.ToString() : "", @type = "hidden" })*@
                                                @*@Html.TextBoxFor(u => u.IdEstadoMovimiento, new { @value = Model != null ? Model.IdEstadoMovimiento.ToString() : "", @type = "hidden" })*@
                                    @Html.TextBoxFor(u => u.UsuarioCreacion, new { @value = Model != null ? Model.UsuarioCreacion.ToString() : "", @type = "hidden" })
                                    @Html.TextBoxFor(u => u.FechaCreacion, new { @value = Model != null ? Model.FechaCreacion.ToString() : "", @type = "hidden" })
                                    @{var btnName = (Model != null && Model.IdMovimiento > 0) ? "Guardar Cambios" : "Crear";}
                                            <button type="submit" class="btn btn-sm btn-success">@btnName </button>
                                            <a class="btn btn-sm btn-danger" href="@Url.Action("Libro", new { id = Model.IdCuentaBancaria })">Salir</a>
                                        </div>
                            </section>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>
</section>