@using BullardLibros.Core.DTO
@model ComprobanteDTO
@{
    ViewBag.Title = "NubeLabs SCI - Comprobante";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
@section Styles{
    @Styles.Render("~/Content/themes/admin/js/select2/select2.css")
    @Styles.Render("~/Content/themes/admin/js/select2/theme.css")
}
@section Scripts{
    @Scripts.Render("~/Content/themes/admin/js/select2/select2.min.js")
    <script type="text/javascript">
        @{
            var jss = new System.Web.Script.Serialization.JavaScriptSerializer();
            var userInfoJson = jss.Serialize(ViewBag.Categorias);
        }
        var mydata = JSON.parse('@Html.Raw(userInfoJson)');
        $(function () {
            $('.miselect2').select2();

            $('#IdCategoria').select2({
                placeholder: "Seleccione una categoría",
                data: mydata,
                allowClear: true
            })
        });

        function CheckNumericValue(e) {
            var key = e.which ? e.which : e.keyCode;
            //enter key  //backspace //tabkey      //escape key
            if ((key >= 48 && key <= 57) || key == 13 || key == 8 || key == 9 || key == 27 || key == 46) {
                return true;
            }
            else {
                alert("Solo ingresar caracteres numericos");
                return false;
            }
        }
    </script>
}

<section class="vbox">
    <section class="scrollable padder">
        <div class="row m-b">
            <div class="col-xs-12 col-md-10 col-md-offset-1">
                @{
                    string strTitulo = "", strFechaIni = "", strEntidad = "", strFechaFin = "";
                    if (Model != null)
                    {
                        switch (Model.IdTipoComprobante)
                        {
                            case 1:
                                strTitulo = "Ingreso";
                                strFechaIni = "Fecha Facturación";
                                strEntidad = "Cliente";
                                strFechaFin = "Cobranza";
                                break;
                            default:
                                strTitulo = "Egreso";
                                strFechaIni = "Fecha Documento";
                                strEntidad = "Proveedor";
                                strFechaFin = "Pago";
                                break;
                        }
                    }
                }
                @if (Model == null || Model.IdComprobante == 0)
                {
                    <h2>Nuevo @strTitulo</h2>
                }
                else
                {
                    <h2>Actualizar @strTitulo</h2>
                }

                @using (Html.BeginForm("AddComprobante", "Admin", FormMethod.Post))
                {
                    @Html.ValidationSummary(true)
                    <div class="row m-b">
                        <div class="col-xs-12 col-md-12">
                            @Html.Partial("_showAlertMessages")

                            <section class="panel panel-default">
                                <header class="panel-heading font-bold">Formulario de Registro</header>
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="form-group col-md-4">
                                            <label>@strFechaIni</label>
                                            @Html.TextBoxFor(u => u.FechaEmision, "{0:dd/MM/yyyy}", new { @class = "datepicker-input form-control", @placeholder = "Ingrese la fecha", @type = "text", @data_provide = "datepicker", @readonly = "true" })
                                            @Html.ValidationMessageFor(u => u.FechaEmision)
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>Tipo de Documento</label>
                                            @Html.DropDownListFor(u => u.IdTipoDocumento, new SelectList(ViewBag.lstTipoDocumento, "IdTipoDocumento", "Nombre", Model != null ? (Model.IdTipoDocumento != null ? Model.IdTipoDocumento : 0) : 0), new { @class = "col-xs-12 col-sm-12 col-md-12 no-padder miselect2" })
                                            @Html.ValidationMessageFor(u => u.IdTipoDocumento)
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>Nro de Documento</label>
                                            @Html.TextBoxFor(u => u.NroDocumento, new { @class = "form-control", @placeholder = "Ingrese el numero de documento", @type = "text" })
                                            @Html.ValidationMessageFor(u => u.NroDocumento)
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="form-group col-md-4">
                                            <label>@strEntidad</label>
                                            @Html.DropDownListFor(u => u.IdEntidadResponsable, new SelectList(Model.IdTipoComprobante == 1 ? ViewBag.lstClientes : ViewBag.lstProveedores, "IdEntidadResponsable", "Nombre", Model != null ? (Model.IdEntidadResponsable != null ? Model.IdEntidadResponsable : 0) : 0), new { @class = "col-xs-12 col-sm-12 col-md-12 no-padder miselect2" })
                                            @Html.ValidationMessageFor(u => u.IdEntidadResponsable)
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>Monto</label>
                                            @Html.TextBoxFor(u => u.Monto, new { @class = "form-control", @placeholder = "Ingrese el monto", @type = "text", @onkeypress = "return CheckNumericValue(event)" })
                                            @Html.ValidationMessageFor(u => u.Monto)
                                        </div>
                                        <div class="form-group col-md-4">
                                            <label>Moneda</label>
                                            @Html.DropDownListFor(u => u.IdMoneda, new SelectList(ViewBag.lstMonedas, "IdMoneda", "Nombre", Model != null ? (Model.IdMoneda != null ? Model.IdMoneda : 0) : 0), new { @class = "col-xs-12 col-sm-12 col-md-12 no-padder miselect2" })
                                            @Html.ValidationMessageFor(u => u.IdMoneda)
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="form-group col-md-4">
                                            <label>Área</label>
                                            @Html.DropDownListFor(u => u.IdArea, new SelectList(ViewBag.lstAreas, "IdArea", "Nombre", Model != null ? (Model.IdArea != null ? Model.IdArea : 0) : 0), new { @class = "col-xs-12 col-sm-12 col-md-12 no-padder miselect2" })
                                            @Html.ValidationMessageFor(u => u.IdArea)
                                        </div>
                                        @if (Model.IdTipoComprobante == 1)
                                        {
                                            <div class="form-group col-md-4">
                                                <label>Responsable</label>
                                                @Html.DropDownListFor(u => u.IdResponsable, new SelectList(ViewBag.lstResponsables, "IdResponsable", "Nombre", Model != null ? (Model.IdResponsable != null ? Model.IdResponsable : 0) : 0), new { @class = "col-xs-12 col-sm-12 col-md-12 no-padder miselect2" })
                                                @Html.ValidationMessageFor(u => u.IdResponsable)
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="form-group col-md-4">
                                                <label>Categoría</label>
                                                @Html.TextBoxFor(u => u.IdCategoria, new { @class = "col-xs-12 col-sm-12 col-md-12 no-padder" })
                                                @Html.ValidationMessageFor(u => u.IdCategoria)
                                            </div>
                                        }
                                        <div class="form-group col-md-4">
                                            <label>@strFechaFin</label>
                                            @Html.TextBoxFor(u => u.FechaConclusion, "{0:dd/MM/yyyy}", new { @class = "datepicker-input form-control", @placeholder = "Ingrese una fecha de cancelación", @type = "text", @data_provide = "datepicker", @readonly = "true" })
                                            @Html.ValidationMessageFor(u => u.FechaConclusion)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label>Comentario</label>
                                        @Html.TextBoxFor(u => u.Comentario, new { @class = "form-control", @placeholder = "Ingrese un comentario", @type = "text" })
                                        @Html.ValidationMessageFor(u => u.Comentario)
                                    </div>
                                    @if (ViewBag.EsAdmin && Model != null && Model.IdEntidadResponsable > 0)
                                    {
                                        <div class="line line-dashed line-md pull-in"></div>
                                        <div class="checkbox">
                                            <label>
                                                @Html.CheckBoxFor(u => u.Estado)
                                                Activo
                                            </label>
                                            @Html.ValidationMessageFor(u => u.Estado)
                                        </div>}
                                    else
                                    {
                                        @Html.TextBoxFor(u => u.Estado, new { @value = Model != null ? Model.Estado : false, @type = "hidden" })
                                    }
                                    <div class="line line-dashed line-md pull-in"></div>
                                    @Html.TextBoxFor(u => u.IdEmpresa, new { @value = Model.IdEmpresa, @type = "hidden" })
                                    @Html.TextBoxFor(u => u.IdTipoComprobante, new { @value = Model.IdTipoComprobante != 0 ? Model.IdTipoComprobante.ToString() : "", @type = "hidden" })
                                    @Html.TextBoxFor(u => u.IdComprobante, new { @value = Model.IdComprobante != 0 ? Model.IdComprobante.ToString() : "", @type = "hidden" })
                                    @{var btnName = (Model != null && Model.IdEntidadResponsable > 0) ? "Guardar Cambios" : "Crear";}
                                    <button type="submit" class="btn btn-sm btn-success">@btnName</button>
                                    <a class="btn btn-sm btn-danger" href="@Url.Action("Comprobantes", "Admin", new { idTipoComprobante = Model.IdTipoComprobante })">Salir</a>
                                </div>
                            </section>
                        </div>
                    </div>
                }
            </div>
        </div>
    </section>
</section>

